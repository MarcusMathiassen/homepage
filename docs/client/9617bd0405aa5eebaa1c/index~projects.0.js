(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{11:function(t,s,i){"use strict";var e=i(0),n=i(1);var o=t=>"#"===t[0]?document.getElementById(t.slice(1,t.length)):"."===t[0]?[...document.getElementsByClassName(t.slice(1,t.length))]:"<"===t[0]?document.createElement(t.slice(1,t.length-1)):[...document.querySelectorAll(t)];class a{constructor(t=0,s=0){this.x=t,this.y=s}neg(){return this.x=-this.x,this.y=-this.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}sub(t){return this.x-=t.x,this.y-=t.y,this}scale(t){return this.x*=t,this.y*=t,this}div(t){return 0!=t&&(this.x/=t,this.y/=t),this}dot(t){return this.x*t.x+this.y*t.y}length(){return Math.sqrt(this.dot(this))}normalize(){return this.div(this.length())}static distance(t,s){return Math.sqrt((s.x-t.x)*(s.x-t.x)+(s.y-t.y)*(s.y-t.y))}static neg(t){return new a(-t.x,-t.y)}static add(t,s){return new a(t.x+s.x,t.y+s.y)}static adds(t,s){return new a(t.x+s,t.y+s)}static sub(t,s){return new a(t.x-s.x,t.y-s.y)}static subs(t,s){return new a(t.x-s,t.y-s)}static scale(t,s){return new a(t.x*s,t.y*s)}static div(t,s){return new a(t.x/s,t.y/s)}static dot(t,s){return t.x*s.x+t.y*s.y}}class r{static fromValues(t,s,i,e,n,o,a,r,h,c,d,l,u,b,y,x){let p=[];return p[0]=t,p[1]=s,p[2]=i,p[3]=e,p[4]=n,p[5]=o,p[6]=a,p[7]=r,p[8]=h,p[9]=c,p[10]=d,p[11]=l,p[12]=u,p[13]=b,p[14]=y,p[15]=x,p}}const h=t=>{let s=new a(1e4,1e4),i=new a(-1e4,-1e4);for(const e of t){const t=e.position;t.x>i.x?i.x=t.x:t.x<s.x&&(s.x=t.x),t.y>i.y?i.y=t.y:t.y<s.y&&(s.y=t.y)}return{min:s,max:i}};class c{constructor(t=new a(0,0),s=new a(0,0)){this.min=t,this.max=s,this.color={r:1,g:1,b:1,a:1}}containsPoint(t,s){return t.x-s<this.max.x&&t.x+s>this.min.x&&t.y-s<this.max.y&&t.y+s>this.min.y}}const d=()=>((new Date).getTime()-0)/1e3,l=(t,s)=>Math.random()*(s-t)+t,u=t=>{const s=o("<button>");s.textContent=t.label,s.id=t.id||t.label,s.className=t.className||"btn",s.addEventListener("click",t.callback),o(`#${t.parent}`).appendChild(s)};class b{constructor(t,s,i){this.position=new a(t,s),this.velocity=new a(l(-1,1),l(-1,1)).scale(2),this.radius=i,this.mass=i}update(t,s){this.position.x<=this.radius&&this.velocity.x<0&&(this.position.x=this.radius,this.velocity.x=-this.velocity.x),this.position.x>=t.width-this.radius&&this.velocity.x>0&&(this.position.x=t.width-this.radius,this.velocity.x=-this.velocity.x),this.position.y<=this.radius&&this.velocity.y<0&&(this.position.y=this.radius,this.velocity.y=-this.velocity.y),this.position.y>=t.height-this.radius&&this.velocity.y>0&&(this.position.y=t.height-this.radius,this.velocity.y=-this.velocity.y),this.velocity.add(s),this.position.add(this.velocity)}collidesWith(t){const s=t.position.x-this.position.x,i=t.position.y-this.position.y,e=this.radius+t.radius;return s*s+i*i<=e*e}resolveCollision(t){const s=this.mass,i=t.mass,e=t.position.x-this.position.x,n=t.position.y-this.position.y;if(e*(t.velocity.x-this.velocity.x)+n*(t.velocity.y-this.velocity.y)<0){const o=new a(e,n).normalize(),r=new a(-1*o.y,o.x),h=a.dot(o,this.velocity),c=a.dot(o,t.velocity),d=a.dot(r,this.velocity),l=a.dot(r,t.velocity),u=(h*(s-i)+2*i*c)/(s+i),b=(c*(i-s)+2*s*h)/(s+i),y=a.scale(o,u),x=a.scale(o,b),p=a.scale(r,d),g=a.scale(r,l);this.velocity=p.add(y),t.velocity=g.add(x)}}}let y=[];const x=10,p=5;class g{constructor(t,s){this.maxCapacityPerNode=x,this.maxDepth=p,this.depth=t,this.bounds=s,this.subnodes=[4],this.indices=[],this.hasSplit=!1}visit(t){return this.hasSplit?(this.subnodes[0].visit(t),this.subnodes[1].visit(t),this.subnodes[2].visit(t),void this.subnodes[3].visit(t)):t(this)}split(){const t=this.bounds.min,s=this.bounds.max,i=t.x,e=t.y,n=s.x-t.x,o=s.y-t.y,r=.5*n,h=.5*o,d=new c(new a(i,e),new a(i+r,e+h)),l=new c(new a(i+r,e),new a(i+n,e+h)),u=new c(new a(i,e+h),new a(i+r,e+o)),b=new c(new a(i+r,e+h),new a(i+n,e+o));this.subnodes[0]=new g(this.depth+1,d),this.subnodes[1]=new g(this.depth+1,l),this.subnodes[2]=new g(this.depth+1,u),this.subnodes[3]=new g(this.depth+1,b),this.hasSplit=!0}input(t){const s=(y=t).length;for(let t=0;t<s;t++)this.insert(t)}contains(t){return this.bounds.containsPoint(y[t].position,y[t].radius)}insert(t){if(this.hasSplit)return this.subnodes[0].contains(t)&&this.subnodes[0].insert(t),this.subnodes[1].contains(t)&&this.subnodes[1].insert(t),this.subnodes[2].contains(t)&&this.subnodes[2].insert(t),void(this.subnodes[3].contains(t)&&this.subnodes[3].insert(t));if(this.indices.push(t),this.indices.length>this.maxCapacityPerNode&&this.depth<this.maxDepth){this.split();for(const t of this.indices)this.subnodes[0].contains(t)&&this.subnodes[0].insert(t),this.subnodes[1].contains(t)&&this.subnodes[1].insert(t),this.subnodes[2].contains(t)&&this.subnodes[2].insert(t),this.subnodes[3].contains(t)&&this.subnodes[3].insert(t);this.indices=[]}}getIndices(t){if(this.hasSplit)return this.subnodes[0].getIndices(t),this.subnodes[1].getIndices(t),this.subnodes[2].getIndices(t),void this.subnodes[3].getIndices(t);0!=this.indices.length&&t.push(this.indices)}getNeighbours(t,s){if(this.hasSplit)return this.subnodes[0].bounds.containsPoint(s.position,s.radius)&&this.subnodes[0].getNeighbours(t,s),this.subnodes[1].bounds.containsPoint(s.position,s.radius)&&this.subnodes[1].getNeighbours(t,s),this.subnodes[2].bounds.containsPoint(s.position,s.radius)&&this.subnodes[2].getNeighbours(t,s),this.subnodes[3].bounds.containsPoint(s.position,s.radius)&&this.subnodes[3].getNeighbours(t,s),!1;0!=this.indices.length&&t.push(this.indices)}getNeighbourNodes(t,s){if(this.hasSplit)return this.subnodes[0].bounds.containsPoint(s.position,s.radius)&&this.subnodes[0].getNeighbourNodes(t,s),this.subnodes[1].bounds.containsPoint(s.position,s.radius)&&this.subnodes[1].getNeighbourNodes(t,s),this.subnodes[2].bounds.containsPoint(s.position,s.radius)&&this.subnodes[2].getNeighbourNodes(t,s),void(this.subnodes[3].bounds.containsPoint(s.position,s.radius)&&this.subnodes[3].getNeighbourNodes(t,s));t.push(this)}getNodesBounds(t){if(this.hasSplit)return this.subnodes[0].getNodesBounds(t),this.subnodes[1].getNodesBounds(t),this.subnodes[2].getNodesBounds(t),void this.subnodes[3].getNodesBounds(t);t.push(this.bounds)}colorNeighbours(t,s,i){if(this.hasSplit)return this.subnodes[0].bounds.containsPoint(t,s)&&this.subnodes[0].colorNeighbours(t,s,i),this.subnodes[1].bounds.containsPoint(t,s)&&this.subnodes[1].colorNeighbours(t,s,i),this.subnodes[2].bounds.containsPoint(t,s)&&this.subnodes[2].colorNeighbours(t,s,i),this.subnodes[3].bounds.containsPoint(t,s)&&this.subnodes[3].colorNeighbours(t,s,i),!1;this.bounds.color=i}}function m(t){var s,i,n,o;return{c(){s=Object(e.m)("h1"),i=Object(e.G)("2D Collisions"),n=Object(e.F)(),o=Object(e.m)("div"),this.h()},l(t){s=Object(e.g)(t,"H1",{},!1);var a=Object(e.f)(s);i=Object(e.h)(a,"2D Collisions"),a.forEach(e.l),n=Object(e.h)(t,"\n"),o=Object(e.g)(t,"DIV",{id:!0},!1),Object(e.f)(o).forEach(e.l),this.h()},h(){Object(e.d)(o,"id","p2d")},m(t,a){Object(e.v)(t,s,a),Object(e.b)(s,i),Object(e.v)(t,n,a),Object(e.v)(t,o,a)},p:e.y,i:e.y,o:e.y,d(t){t&&(Object(e.l)(s),Object(e.l)(n),Object(e.l)(o))}}}function f(t){return Object(n.b)(()=>{let t,s,i,e,n,l,y,x,p,m,f=[],w=!1,v=0,N=0,E=[],A={r:255,g:255,b:255},S={r:255,g:0,b:255},P=300,R=300,O=!0,L=!1,C=!0,F=!0,M=!0,j=!1,B=!1,_=!1,I=[],T=60,k=0,D={x:0,y:0},U=[],V=[],Y=8,$={r:0,g:0,b:0,a:1},q={r:0,g:1,b:0,a:1},H=!1;const W=o("<canvas>");W.id="p2d-canvas",W.textContent="webgl canvas placeholder",(s=o("#p2d")).appendChild(W),s.addEventListener("mouseenter",()=>w=!w),s.addEventListener("mouseleave",()=>w=!w),s.addEventListener("mousemove",t=>{!function(t,s){s=s||t.target;let i=function(t,s){const i=(s=s||t.target).getBoundingClientRect();return{x:t.clientX-i.left,y:t.clientY-i.top}}(t,s);i.x*=y,i.y*=y,D=i}(t),H&&function(){const t=rt();let s=new b(D.x,D.y,t);U.push(s),V.push($)}()}),s.addEventListener("mousedown",()=>H=!0),s.addEventListener("mouseup",()=>H=!1),x=W;const z=o("<div>");if(z.id=`${s.id}-settings`,s.append(z),(p=o("<ul>")).id=`${s.id}-info`,p.className="demo-info-list",s.insertBefore(p,x),u({label:"clear",className:"btn small",callback:function(){U.length=0,V.length=0},parent:z.id}),u({label:"show neighbours",className:"btn small",callback:()=>{M=!M},parent:z.id}),u({label:"quadtree",className:"btn small",callback:()=>{C^=1},parent:z.id}),u({label:"optimized quadtree bounds",className:"btn small",callback:()=>{F^=1},parent:z.id}),u({label:"show quadtree nodes",className:"btn small",callback:()=>{L^=1},parent:z.id}),u({label:"collisions",className:"btn small",callback:()=>{O^=1},parent:z.id}),u({label:"gravity",className:"btn small",callback:()=>{_^=1},parent:z.id}),u({label:"info",className:"btn small",callback:()=>{B^=1},parent:z.id}),u({label:"pause",className:"btn small",callback:()=>{j^=1},parent:z.id}),!(i=x.getContext("webgl2")))return void alert("Unable to initialize WebGL. Your browser may not support it.");i.enable(i.BLEND),i.blendFunc(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA),l=i.createProgram();let G=i.createShader(i.VERTEX_SHADER),J=i.createShader(i.FRAGMENT_SHADER);if(i.shaderSource(G,"\n        precision mediump float;\n\n        uniform mat4 projectionMatrix;\n        attribute vec2 position;\n        attribute vec4 color;\n\n        varying vec4 color0;\n\n        void main() {\n            gl_Position = projectionMatrix * vec4(position, 0.0, 1.0);\n            color0 = color;\n        }\n        "),i.shaderSource(J,"\n        precision mediump float;\n        varying vec4 color0;\n        void main() {\n          gl_FragColor = color0;\n        }"),i.compileShader(G),!i.getShaderParameter(G,i.COMPILE_STATUS))return void console.error("ERROR compiling vertex shader!",i.getShaderInfoLog(G));if(i.compileShader(J),!i.getShaderParameter(J,i.COMPILE_STATUS))return void console.error("ERROR compiling fragment shader!",i.getShaderInfoLog(J));i.attachShader(l,G),i.attachShader(l,J),i.bindAttribLocation(l,0,"position"),i.bindAttribLocation(l,1,"color"),i.linkProgram(l),i.validateProgram(l),t=i.getUniformLocation(l,"projectionMatrix"),i.deleteShader(G),i.deleteShader(J),e=i.createVertexArray(),i.bindVertexArray(e),n=i.createBuffer(),i.bindBuffer(i.ARRAY_BUFFER,n),i.vertexAttribPointer(0,2,i.FLOAT,i.FALSE,6*Float32Array.BYTES_PER_ELEMENT,0),i.vertexAttribPointer(1,4,i.FLOAT,i.FALSE,6*Float32Array.BYTES_PER_ELEMENT,2*Float32Array.BYTES_PER_ELEMENT),i.enableVertexAttribArray(0),i.enableVertexAttribArray(1);const X=t=>{let s=0,i=0;const e=t.length;for(let n=0;n<e;n++)for(let o=n+1;o<e;o++)t[n].collidesWith(t[o])&&(t[n].resolveCollision(t[o]),i++),s++;return{comparisons:s,hits:i}},K=(t,s)=>{let i=0,e=0;for(const n of s){const s=n.length;for(let o=0;o<s;o++)for(let a=o+1;a<s;a++)t[n[o]].collidesWith(t[n[a]])&&(t[n[o]].resolveCollision(t[n[a]]),e++),i++}return{comparisons:i,hits:e}},Q=t=>({r:t.r/255,g:t.g/255,b:t.b/255,a:t.a||t.a/255}),Z=(t,s,i)=>{nt([t.x,s.y,i.r,i.g,i.b,i.a,s.x,s.y,i.r,i.g,i.b,i.a,s.x,t.y,i.r,i.g,i.b,i.a,t.x,s.y,i.r,i.g,i.b,i.a,s.x,t.y,i.r,i.g,i.b,i.a,t.x,t.y,i.r,i.g,i.b,i.a])},tt=(t,s,i,e)=>{const n=.5*e,o=new a(t.x,s.y),r=s,h=new a(s.x,t.y),c=t;Z(a.subs(o,n),a.adds(r,n),i),Z(a.adds(r,n),a.subs(h,n),i),Z(a.adds(h,n),a.subs(c,n),i),Z(a.adds(c,n),a.subs(o,n),i)},st=(t,s,i,e,n)=>{let o,r=new a(t.x+i,t.y);const h=2*Math.PI;for(let c=1;c<=n+3;c+=2){const d=c*h/n;o=new a(t.x+i*Math.cos(d),t.y+i*Math.sin(d)),it(r,o,s,e),r=o}},it=(t,s,i,e)=>{e<0&&(e=.001);let n=.5*a.distance(t,s),o=s.x-t.x,r=s.y-t.y,h=Math.atan2(r,o),c=e,d=a.add(t,s).scale(.5),l={x:d.x-n+c,y:d.y},u={x:d.x+n-c,y:d.y};const b=a.subs(l,c),y=a.adds(u,c),x=[new a(b.x,y.y),new a(y.x,y.y),new a(y.x,b.y),new a(b.x,y.y),new a(y.x,b.y),new a(b.x,b.y)],p=Math.cos(h),g=Math.sin(h);for(let t of x){const s=t.x-d.x,i=t.y-d.y,e=s*p-i*g,n=s*g+i*p;t.x=e+d.x,t.y=n+d.y}nt([x[0].x,x[0].y,i.r,i.g,i.b,i.a,x[1].x,x[1].y,i.r,i.g,i.b,i.a,x[2].x,x[2].y,i.r,i.g,i.b,i.a,x[3].x,x[3].y,i.r,i.g,i.b,i.a,x[4].x,x[4].y,i.r,i.g,i.b,i.a,x[5].x,x[5].y,i.r,i.g,i.b,i.a])},et=(t,s,i,e)=>{let n=[],o=t,a=0;for(let r=0;r<e+3;++r){switch(a++){case 0:n.push(o.x),n.push(o.y);break;case 1:const s=r*Math.PI*2/e;o={x:t.x+i*Math.cos(s),y:t.y+i*Math.sin(s)},n.push(o.x),n.push(o.y);break;case 2:a=0,n.push(t.x),n.push(t.y)}n.push(s.r),n.push(s.g),n.push(s.b),n.push(s.a)}nt(n)};function nt(t){f.push(...t)}function ot(){w&&st(D,S,rt(),.5*y,36),function(t=!0,s=14){p.innerHTML="",p.style=`font-size: ${s}px; display: ${t?"inline":"none"};`;const i=[`FPS: ${T}`,`Particles: ${U.length}`,`Comparisons: ${v}(${(at()/v).toFixed(0)}x)`];for(const t of i){const s=o("<li>");s.textContent=t,s.className="demo-info-list-element",p.appendChild(s)}}(B)}function at(){const t=U.length;return t*(t-1)/2}function rt(){return Y*y}!function o(){var u,b;u=P=s.offsetWidth-1*y,b=R=500-1*y,y=window.devicePixelRatio||1,x.width=u*y,x.height=b*y,x.style.width=u+"px",x.style.height=b+"px",P*=y,R*=y,(S=Q(window.color.textNormal)).a=1,(A=Q(window.color.background)).a=1,(q=Q(window.color.textHighlight)).a=1,i.clearColor(A.r,A.g,A.b,1),i.clear(i.COLOR_BUFFER_BIT);d();if(C){let t=new a(0,0),s=new a(P,R);if(F){const i=h(U);t=i.min,s=i.max}m=new c(t,s);const i=new g(0,m);if(i.input(U),I=[],i.getNodesBounds(I),E=[],i.getIndices(E),L)for(const t of I){const s=t.min.x,i=t.min.y,e=t.max.x-t.min.x-1,n=t.max.y-t.min.y-1;tt(new a(s,i),new a(s+e,i+n),S,2*y)}if(w&&M){let t=[];i.getNeighbourNodes(t,{position:D,radius:rt()}),t.forEach(t=>{const s=t.bounds,i=s.min.x,e=s.min.y,n=s.max.x-s.min.x-1,o=s.max.y-s.min.y-1;tt(new a(i,e),new a(i+n,e+o),q,2*y),t.indices.forEach(t=>{V[t]=q})})}}if(O){let t;t=C?K(U,E):X(U),v=t.comparisons,N=t.hits}if(!j){const t=_?.0981:0;for(let s of U)s.update({width:P,height:R},{x:0,y:t})}!function(){const t=U.length;for(let s=0;s<t;++s){const t=U[s],i=t.position,e=t.radius,n=V[s];et(i,n,e,36),st(i,A,e,.3*y,36),V[s]={r:S.r,g:S.g,b:S.b,a:1}}}(),function(){if(0===f.length)return;const s=new a(P,R);i.viewport(0,0,P,R);const o=r.fromValues(2/s.x,0,0,0,0,2/-s.y,0,0,0,0,-1,0,-1,1,0,1);i.useProgram(l),i.uniformMatrix4fv(t,i.FALSE,o),i.bindVertexArray(e),i.bindBuffer(i.ARRAY_BUFFER,n),i.bufferData(i.ARRAY_BUFFER,new Float32Array(f),i.DYNAMIC_DRAW),i.drawArrays(i.TRIANGLES,0,f.length/6),f=[],T=1/(d()-k),k=d(),T=T.toFixed(0)}(),ot(),window.requestAnimationFrame(o)}()}),{}}s.a=class extends e.a{constructor(t){super(),Object(e.u)(this,t,f,m,e.C,[])}}}}]);